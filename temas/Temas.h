//
// Created by mauricio on 1/04/22.
//

#ifndef HELLOCPP_TEMAS_H
#define HELLOCPP_TEMAS_H

void asignacion();
void headers();
void tiposFundamentales();
void conversionTipos();
void cadenas();
void variablesConstantes(const int x);
void constantesTiempoCompilacion();
void namespaces();
void variablesGlobales();
void vinculacion();
void variablesInline();
void excepciones();
void usoGoto();
void conversionesExplicitas();
void infereciaTipos();
void sobrecargaFunciones();
void argumentoPredeterminado();
void templatesFunciones();
void arrays();
void enums();
void swapStd();
void arrayMultidimencional();
void decaimientoAPuntero();
void punteros();
void pasoPorReferenciaYValor();
void evaluarCostoPasoPorReferencia();
void punterosNulos();
void punterosColgantes();
void pasoPorDireccion();
void pasoPorRefYDirecc();
void pasoPunteroPorRef();
void retornoPorReferencia();
void estructuras();
void seleccionDeMiembros();
void arimeticaDePunteros();
void asignacionDinamicaMemoria();
void asignacionDinamicaArrays();
void loopForEach();
void punterosVoid();
void stdArray();
void stdVector();
void busquedas();
void punterosDeFunciones();
void funcionesComoArgumentos();
void stdFunction();
void lambdas();
void lambdasClausulaCaptura();
void clases();
void inicializacionClases();
void clasesMiembrosNoStatic();
void destructoresClases();
void claseFecha();
void constructorPorCopia();
void pasoYRetornoPorValor();
void punteroOcultoThis();
void calculadoraBuilder();
void claseConCopiaSuperficialError();
void claseConCopiaSuperficial();
void claseConCopiaProfunda();
void herencia();
void punteroClasePadre();
void funcionesVirtuales();
void funcionesVirtualesPuras();
void referenceWrapper();
void templateClases();
void templatesNoTipo();
void especializacionPlantillas();
void especializacionConstructorYDestructor();
void especializacionPlantillasDeClases();
void erroresExcepciones();
void excepcionesEnFunciones();
void excepcionesCatchAll();
void clasesException();
void myException();
void exceptionesReThrowing();
void inicioConthreads();
void punterosInteligentes();
void semanticaMovimiento();
void referenciaLValueYRValue();
void constYAsigCopiaProfunda();
void constYAsigCopiaProfundaYMovimiento();
void stdMove();
void pasoParametrosPorCopia();
void retornoValorFuncion();
void pasoParametroPorReferencia();
void pasoParametroPorReferenciaYRetornoNormal();
void pasoParametroPorReferenciaYRetornoReferencia();
void copiaYOperadorAsignacion();
void stdMoveIntercambioPorCopia();
void stdMoveIntercambioPorMovimiento();
void smartPointerUniquePtr();
void smartPointerUniquePtrMove();
void erroresAlUsarSmartPointers();
void smartPointersRetornoFuncion();
void smartPointersPasoParametro();
void smartPointerSharedPtr();
void erroresEnSmartPointerSharedPtr();
void smartPointerSharedPtrMakeShared();
void smartPointerSharedPtrInfo();
void smartPointerWeakPtr();
void stlStdVector();
void stdDeque();
void stdList();
void stdSet();
void stdMap();
void stdStack();
void stdQueue();
void stdPriorityQueue();
void iteradores();
void algoritmos();

#endif //HELLOCPP_TEMAS_H
